# -*- coding: utf-8 -*-
"""ETL.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cPODClrdq8H2kIsIISUoIcfX2lZDwkdO
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import os
# %matplotlib notebook

confirmed_data_df = pd.read_csv("/content/time_series_covid19_confirmed_global.csv")
confirmed_data_df.head()

recovered_data_df = pd.read_csv("/content/time_series_covid19_recovered_global.csv")
recovered_data_df.head()

#Read data set/csv file on deaths and display first 5 rows
deaths_data_df = pd.read_csv("/content/time_series_covid19_deaths_global.csv")
deaths_data_df.head()

confirmed_data_df.dtypes
recovered_data_df.dtypes
deaths_data_df.dtypes

def clean(df):
    clean_df = df.drop(columns=['Province/State','Lat','Long']).\
                    iloc[:,np.r_[0:1,40:67]].\
                    groupby('Country/Region').sum().\
                    reset_index()
    return clean_df

confirmed_clean_df = clean(confirmed_data_df)
confirmed_clean_df

recovered_clean_df = clean(recovered_data_df)
recovered_clean_df

deaths_clean_df = clean(deaths_data_df)
deaths_clean_df

confirmed_clean_df["Country/Region"].equals(deaths_clean_df["Country/Region"])

recovered_clean_df["Country/Region"].equals(deaths_clean_df["Country/Region"])

import datetime
import os

def convert(clean_df):
    converted = pd.melt(clean_df, id_vars=["Country/Region"],
                  var_name="Date", value_name="Number")
    converted['Date'] = pd.to_datetime(converted['Date'])
    converted_df = converted.sort_values(by=["Country/Region","Date"])
    return converted_df

confirmed_convert_df = convert(confirmed_clean_df)
recovered_convert_df = convert(recovered_clean_df)
deaths_convert_df = convert(deaths_clean_df)


deaths_convert_df

def dailychange(convert_df):
    convert_df = convert_df.set_index(['Country/Region','Date'])
    convert_df['amount_of_increase']=convert_df.diff()
    convert_df=convert_df.reset_index()
    for i in range(0,int(convert_df.index.size)-1):
        if convert_df['Country/Region'][i] != convert_df['Country/Region'][i+1]:
            convert_df.at[i+1,'amount_of_increase'] = 0
        else:
            pass
    convert_df=convert_df.fillna(0)

    return convert_df

confirmed_daily_df = dailychange(confirmed_convert_df)
recovered_daily_df = dailychange(recovered_convert_df)
deaths_daily_df = dailychange(deaths_convert_df)

deaths_daily_df

confirmed_daily_df.columns=['country','date','accumulated_confirmed','increase_of_confirmed']
recovered_daily_df.columns=['country','date','accumulated_recovered','increase_of_recovered']
deaths_daily_df.columns=['country','date','accumulated_deaths','increase_of_deaths']

confirmed_daily_df["increase_of_confirmed"] = confirmed_daily_df["increase_of_confirmed"].astype(int)
recovered_daily_df["increase_of_recovered"] = recovered_daily_df["increase_of_recovered"].astype(int)
deaths_daily_df["increase_of_deaths"] = deaths_daily_df["increase_of_deaths"].astype(int)

!mkdir clean_data

confirmed_daily_df.to_csv(os.path.join('clean_data','confirmed_clean_df.csv'), index=False)
recovered_daily_df.to_csv(os.path.join('clean_data','recovered_clean_df.csv'), index=False)
deaths_daily_df.to_csv(os.path.join('clean_data','deaths_clean_df.csv'), index=False)

confirmed_cleaned_csv_path = os.path.join('clean_data','confirmed_clean_df.csv')
recovered_cleaned_csv_path = os.path.join('clean_data','recovered_clean_df.csv')
deaths_cleaned_csv_path = os.path.join('clean_data','deaths_clean_df.csv')

confirmed_cleaned_df = pd.read_csv(confirmed_cleaned_csv_path)
recovered_cleaned_df = pd.read_csv(recovered_cleaned_csv_path)
deaths_cleaned_df = pd.read_csv(deaths_cleaned_csv_path)

print(confirmed_cleaned_df)
print(recovered_cleaned_df)
print(deaths_cleaned_df)